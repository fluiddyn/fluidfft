
[build-system]
requires = [
         "meson-python",
         "numpy",
         "transonic>=0.6.0",
         "pythran>=0.9.7",
         "jinja2",
         "cython",
         ]
build-backend = 'mesonpy'

[project]
name = "fluidfft"
version = "0.3.5"
description = "Efficient and easy Fast Fourier Transform (FFT) for Python."
authors = [
    {name = "Pierre Augier", email = "pierre.augier@legi.cnrs.fr"},
]
dependencies = [
    "fluiddyn >= 0.2.3",
    "transonic >= 0.4",
    "importlib_metadata; python_version < '3.10'",
]
requires-python = ">= 3.9"
readme = "README.md"
license = {text = "CeCILL License"}
keywords = [
    "Fast Fourier Transform",
    "FFT",
    "spectral code",
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Education",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: GNU General Public License v2 (GPLv2)",
    "Programming Language :: C",
    "Programming Language :: Cython",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.9",
    "Topic :: Scientific/Engineering",
]

[project.urls]
Homepage = "https://foss.heptapod.net/fluiddyn/fluidfft"

[project.optional-dependencies]
pyfftw = [
    "pyfftw >= 0.10.4",
]
mpi = [
    "mpi4py",
]

[project.scripts]
fluidfft-bench = "fluidfft.bench:run"
fluidfft-bench-analysis = "fluidfft.bench_analysis:run"

[project.entry-points."fluidfft.plugins"]
# TODO: uncomment when code using pyfftw is back in fluidfft
# "fft2d.with_pyfftw" = "fluidfft.fft2d.with_pyfftw"
# "fft3d.with_pyfftw" = "fluidfft.fft3d.with_pyfftw"
"fft2d.with_dask" = "fluidfft.fft2d.with_dask"

# should be in fluidfft-fftw
"fft2d.with_fftw1d" = "fluidfft.fft2d.with_fftw1d"
"fft2d.with_fftw2d" = "fluidfft.fft2d.with_fftw2d"
"fft3d.with_fftw3d" = "fluidfft.fft3d.with_fftw3d"

# should be in fluidfft-cuda
# (or better HIP?, see https://foss.heptapod.net/fluiddyn/fluidfft/-/merge_requests/46)
"fft2d.with_cufft" = "fluidfft.fft2d.with_cufft"
"fft3d.with_cufft" = "fluidfft.fft3d.with_cufft"

# should be in fluidfft-mpi_with_fftw
"fft2d.mpi_with_fftw1d" = "fluidfft.fft2d.mpi_with_fftw1d"
"fft3d.mpi_with_fftw1d" = "fluidfft.fft3d.mpi_with_fftw1d"

# should be in fluidfft-fftwmpi
"fft2d.mpi_with_fftwmpi2d" = "fluidfft.fft2d.mpi_with_fftwmpi2d"
"fft3d.mpi_with_fftwmpi3d" = "fluidfft.fft3d.mpi_with_fftwmpi3d"

# should be in fluidfft-p3dfft
"fft3d.mpi_with_p3dfft" = "fluidfft.fft3d.mpi_with_p3dfft"

# should be in fluidfft-pfft
"fft3d.mpi_with_pfft" = "fluidfft.fft3d.mpi_with_pfft"

[tool.pdm]
distribution = true
package-dir = "src"

[tool.pdm.dev-dependencies]
build = ["setuptools", "transonic", "pythran", "wheel", "jinja2"]

# plugins = [
#     "-e fluidfft-mpi4pyfft @ file:///${PROJECT_ROOT}/plugins/fluidfft-mpi4pyfft",
# ]

test = [
    "pytest",
    "coverage",
    "pytest-cov",
    "cython", # needed at run time for coverage
]
dev = [
    "pip",
    "ipython",
]
doc = [
    "sphinx",
    "sphinx_copybutton",
    "sphinx_rtd_theme",
    "jupyter",
    "myst-nb",
    "numpydoc",
    "pandas",
    "pyfftw",
]
lint = ["black", "pylint"]

[tool.pdm.scripts]
black = 'black -l 82 src doc plugins tests --exclude "/(__pythran__|__python__|__numba__|doc/_build|\.ipynb_checkpoints/*)/"'
black_check = 'black --check -l 82 src doc plugins tests --exclude "/(__pythran__|__python__|__numba__|doc/_build|\.ipynb_checkpoints/*)/"'
lint = {shell="pylint -rn --rcfile=pylintrc --jobs=$(nproc) src doc tests plugins --exit-zero"}
validate_code = {composite = ["black_check", "lint"]}
