SINGLE_PREC:=yes
FLAGS:=-DCUDA -m64 -gencode arch=compute_20,code=sm_20 -gencode arch=compute_30,code=sm_30 -gencode arch=compute_32,code=sm_32 -gencode arch=compute_35,code=sm_35 -gencode arch=compute_50,code=sm_50 -gencode arch=compute_50,code=compute_50 #-DOMP
CC:=nvcc
LIBS:= -lmpi_cxx -lmpi -ldl -lhwloc -lcufft -lm -lmpi_f77 -lgfortran -Xcompiler -fopenmp

ifeq "$(SINGLE_PREC)" "yes"
FLAGS+=-DSINGLE_PREC
LIBS+= -lfftw3f -lfftw3f_mpi -lfftw3f_omp -lpfftf -lp3dfft_sp
else
LIBS+= -lfftw3 -lfftw3_mpi -lfftw3_omp -lpfft -lp3dfft
endif


LIB_DIR:=$(LDEV_PATH)
INC_DIR:=-I. -I../base $(IDEV_PATH) -I/usr/lib/openmpi/include -I/usr/lib/openmpi/include/openmpi -I/opt/cuda/NVIDIA_CUDA-6.0_Samples/common/inc/
LDFLAGS:=#-fpermissive

SOURCES_CPP := $(wildcard *.cpp)
SOURCES_CU := $(wildcard *.cu)
OBJECTS := $(SOURCES_CPP:.cpp=.o)
OBJECTS += $(SOURCES_CU:.cu=.o)

empty :=
space := $(empty) $(empty)

SOURCES_CPP_BASE := $(wildcard ../base/*.cpp)
OBJECTS_CPP_BASE := $(subst ../base/,,$(SOURCES_CPP_BASE))
OBJECTS_CPP_BASE := $(OBJECTS_CPP_BASE:.cpp=.o)

OBJECTS_BUILD = build/$(subst $(space), $(space)build/,$(OBJECTS) $(OBJECTS_CPP_BASE))


.PHONY: help all clean _build_dir

all: test_bench.out

clean:
	rm -rf build
	rm -f *.out

_build_dir:
	mkdir -p build

test_bench.out: _build_dir $(OBJECTS) $(OBJECTS_CPP_BASE)
	# link to build the executable $@
	$(CC) $(FLAGS) $(OBJECTS_BUILD) $(LIBS) $(LIB_DIR) -o $@

%.o: %.cu
	# make $@ from $<
	$(CC) $(FLAGS) $(INC_DIR) -c $< -o build/$@
%.o: %.cpp
	# make $@ from $<
	$(CC) $(FLAGS) $(INC_DIR) -c $< -o build/$@

%.o: %.cpp %.h
	# make $@ from $<
	$(CC) $(FLAGS) $(INC_DIR) -c $< -o build/$@

%.o: ../base/%.cpp
	# make $@ from $<
	$(CC) $(FLAGS) $(LDFLAGS) $(INC_DIR) -c $< -o build/$@
